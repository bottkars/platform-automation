s3_env: &s3_env
  access_key_id: ((((foundation))/s3_access_key_id))
  endpoint:  ((((foundation))/s3_endpoint))
  region_name: ((((foundation))/s3_region_name))
  secret_access_key: ((((foundation))/s3_secret_access_key))


credhub_env: &credhub_env
  CREDHUB_CLIENT: ((((foundation))/credhub-client))
  CREDHUB_SECRET: ((((foundation))/credhub-secret))
  CREDHUB_SERVER: ((credhub-server))
  PREFIX: /concourse/main/((foundation))
  CREDHUB_CA_CERT: ((((foundation))/credhub-ca-cert.certificate))



resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
   

resources:
# triggers
#- name: daily-trigger
#  icon: calendar-clock
#  type: time
#  source:
#    interval: 24h


- name: one-time-trigger
  icon: calendar-clock
  type: time
  source:
    interval: 999999h

- name: dps-automation-image
  icon: docker
  type: docker-image
  source:
    repository: harbor.pks.home.labbuildr.com/bottkars/dps-automation-image
    ca_certs:
    - domain: harbor.pks.home.labbuildr.com
      cert: ((pksdemo/pks_cert.ca))
#    tag: v0.1

- name: dps-modules
  tags: ((tags))
  icon: git
  type: git
  check_every: 10m  
  source:  
    uri: https://github.com/bottkars/dps-modules.git
    branch: master

- name: AvamarUpgrade
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: avamar/((avamar.version))/AvamarUpgrade-(.*).avp

- name: UpgradeAvinstaller
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: avamar/((avamar.version))/UpgradeAvinstaller-(.*).avp

- name: UpgradeClientDownloads
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: avamar/((avamar.version))/UpgradeClientDownloads-(.*).avp

- name: UpgradeClientPluginCatalog
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: avamar/((avamar.version))/UpgradeClientPluginCatalog-(.*).avp
- name: ChangeNetworkSettings
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: avamar/((avamar.version))/ChangeNetworkSettings-(.*).avp
- name: AVE
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: avamar/((avamar.version))/AVE-(.*).ova

- name: AZURE-AVE
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: avamar/((avamar.version))/AZURE-AVE-(.*).vhd.7z


jobs:
- name: get-avupdate
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: false
    - get: dps-automation-image
      params:
        unpack: true
      tags: ((tags))        
    - get: dps-modules
      tags: ((tags))
  - task: download-avp
    tags: ((tags))
    image: dps-automation-image
    file: dps-modules/ci/tasks/download-avamar-packages.yml
    input_mapping:
      dps-modules: dps-modules
    params:
      AV_RELEASE: ((avamar.upgrade_release))
      AV_LOCATION: ((avamar.upgrade))
      avamar: ((avamar))
      extension: avp
      packages: ((avamar.packages))
    output_mapping: 
      AvamarUpgrade: AvamarUpgrade
      UpgradeAvinstaller: UpgradeAvinstaller
      UpgradeClientDownloads: UpgradeClientDownloads
      UpgradeClientPluginCatalog: UpgradeClientPluginCatalog
      ChangeNetworkSettings: ChangeNetworkSettings
  - in_parallel:
    - try:
        put: AvamarUpgrade
        tags: ((tags))
        params:
          file: AvamarUpgrade/*.avp
    - try:
        put: UpgradeAvinstaller
        tags: ((tags))
        params:
          file: UpgradeAvinstaller/*.avp
    - try:
        put: UpgradeClientDownloads
        tags: ((tags))
        params:
          file: UpgradeClientDownloads/*.avp
    - put: UpgradeClientPluginCatalog
      tags: ((tags))
      params:
        file: UpgradeClientPluginCatalog/*.avp 
    - put: ChangeNetworkSettings
      tags: ((tags))
      params:
        file: ChangeNetworkSettings/*.avp                  

- name: get-azure-ave
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: false
    - get: dps-automation-image
      params:
        unpack: true
      tags: ((tags))        
    - get: dps-modules
      tags: ((tags))
  - task: download-ave
    tags: ((tags))
    image: dps-automation-image
    file: dps-modules/ci/tasks/download-avamar-packages.yml
    input_mapping:
      dps-modules: dps-modules
    params:
      avamar: ((avamar))
      packages: AZURE-AVE
      extension: vhd.7z
      AV_LOCATION: ((avamar.package))
      AV_RELEASE: ((avamar.ova_release))
    output_mapping: 
      AZURE-AVE: AZURE-AVE
  - in_parallel:
    - put: AZURE-AVE
      tags: ((tags))
      params:
        file: AZURE-AVE/AZURE-AVE-*.vhd.7z

- name: get-ave-ova
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: false
    - get: dps-automation-image
      params:
        unpack: true
      tags: ((tags))        
    - get: dps-modules
      tags: ((tags))
  - task: download-ave
    tags: ((tags))
    image: dps-automation-image
    file: dps-modules/ci/tasks/download-avamar-packages.yml
    input_mapping:
      dps-modules: dps-modules
    params:
      avamar: ((avamar))
      packages: AVE
      extension: ova
      AV_LOCATION: ((avamar.package))
      AV_RELEASE: ((avamar.ova_release))
    output_mapping: 
      AVE: AVE
  - in_parallel:
    - put: AVE
      tags: ((tags))
      params:
        file: AVE/AVE*.ova