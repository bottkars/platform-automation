---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
- name: azure-blobstore
  type: docker-image
  source:
    repository: pcfabr/azure-blobstore-resource
resources:
- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet-token))
    product_slug: platform-automation
    product_version: 3\.0\.(.*)
    sort_by: semver
- name: platform-automation-tasks-azure
  type: azure-blobstore
  source:
    storage_account_key: ((storage_account_key))
    storage_account_name: ((storage_account_name))
    container: tasks
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image-azure
  type: azure-blobstore
  source:
    storage_account_key: ((storage_account_key))
    storage_account_name: ((storage_account_name))
    container: image
    regexp: platform-automation-image-(.*).tgz
- name: platform-automation
  type: pivnet
  source:
    product_slug: platform-automation
    api_token: ((pivnet-token))
- name: pas-product
  type: azure-blobstore
  source:
    storage_account_key: ((storage_account_key))
    storage_account_name: ((storage_account_name))
    container: products
    regexp: pas/cf-(.*).pivotal
- name: pas-stemcell
  type: azure-blobstore
  source:
    storage_account_key: ((storage_account_key))
    storage_account_name: ((storage_account_name))
    container: stemcells
    regexp: pas-stemcell/bosh-stemcell-(.*).tgz
- name: config
  type: git
  source:
    uri: ((pipeline-repo))
    private_key: ((plat-auto-pipes-deploy-key.private_key))
    branch: master
- name: configuration
  type: git
  source:
    uri: ((pipeline-repo))
    private_key: ((plat-auto-pipes-deploy-key.private_key))
    branch: master
- name: variable
  type: git
  source:
    uri: ((pipeline-repo))
    private_key: ((plat-auto-pipes-deploy-key.private_key))
    branch: master        
jobs:
- name: fetch-platform-automation
  plan:
  - get: platform-automation-pivnet
    # trigger: true
  - aggregate:
    - put: platform-automation-tasks-azure
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image-azure
      params:
        file: platform-automation-pivnet/*image*.tgz
- name: fetch-pas
  plan:
  - aggregate:
    # - get: daily
    #   trigger: true
    - get: platform-automation-image-azure
      params:
        unpack: true
    - get: platform-automation-tasks-azure
      params:
        unpack: true
    - get: configuration
    - get: variable
  - task: credhub-interpolate
    <<: *credhub-interpolate-all-product-configs
  - task: download-pas-product-and-stemcell
    image: platform-automation-image-azure
    file: platform-automation-tasks-azure/tasks/download-product.yml
    params:
      CONFIG_FILE: ((foundation))/download-pas.yml
    input_mapping:
      config: variable
    output_mapping:
      downloaded-stemcell: pas-stemcell
  - aggregate:
    - put: pas-product
      params:
        file: downloaded-product/*.pivotal
    - put: pas-stemcell
      params:
        file: pas-stemcell/*.tgz

- name: test-resources
  plan:
  - aggregate:
    - get: platform-automation-tasks-azure
      params:
        unpack: true
    - get: platform-automation-image-azure
      params:
        unpack: true
  - task: test-resources
    image: platform-automation-image-azure
    file: platform-automation-tasks-azure/tasks/test.yml
- name: install-ops-manager
  serial: true
  plan:
    - get: platform-automation-image-azure
      resource: platform-automation
      params:
        globs: ["*image*.tgz"]
        unpack: true
    - get: platform-automation-tasks-azure
      resource: platform-automation
      params:
        globs: ["*tasks*.zip"]
        unpack: true
    - get: config
    - task: credhub-interpolate
      image: platform-automation-image-azure
      file: platform-automation-tasks-azure/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: |
            -----BEGIN CERTIFICATE-----
            MIIDNzCCAh+gAwIBAgIUbHXdLLOhfmyWEqwHj633UaWtehgwDQYJKoZIhvcNAQEL
            BQAwGTEXMBUGA1UEAxMOY29udHJvbHBsYW5lY2EwHhcNMTkwNTE3MjI1NjQ4WhcN
            MjAwNTE2MjI1NjQ4WjAcMRowGAYDVQQDExFjb250cm9sLXBsYW5lLXRsczCCASIw
            DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKCOAGcGvNAhZpaWaNoMAt6Cv+vW
            TfJP8TP7E5FpTedv5mV21yG7BfrIOsrlPjaq3qnOP+soAd2b3GMe8RYBdKsHSiY3
            VQusVty7lWq+1xCYlvkK1ruAoUNxw2YSS6XGqKbZ3bqQd9552nWONUa6O9309lN9
            cYEHlj5/a5ulD1jRMh0SaNegJGJyT6XmDTitDSjoastK94N5rfv0ypu7pCqxDeZd
            vvV7LfwVeJkJF0ubUjKwqFZSI67v48oUjwxsJSK7vJFn4HadxiykFWbZIzHNiZJ5
            A8SdRVq6Tic22s2C4c+zk1smwqFzmA5bYxnNJ3fBVcMsjzZL3IfSz5stsnkCAwEA
            AaN0MHIwHQYDVR0OBBYEFIURsVznrEKXCv17KhQRjNzUySkoMCIGA1UdEQQbMBmC
            FyouY29udHJvbC5sYWJidWlsZHIuY29tMB8GA1UdIwQYMBaAFHW2XzlvLi+JV40E
            xMmqcfu1JOPvMAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggEBACxaaGZI
            tqZ7kAGAjsGqDP3LYBuGCKb5ezqt2NSRUdu9Kn5WNoKHPzyjmGO2H8wodIa/zgeM
            w3cJ+isdWtcMP3xRQNRpJZ8UEsO06pRhX3ob00OQxjrsucs4HdZbiqLh6I7ojQSt
            ACReBsP0R+jkiTi1aDJkOCqtV0bPO8wSAadXYhdm5rqclveY/4qR1S+Sbx3sQu82
            d/32RqNOFaN+d2sj0rZ/zt7zfEYHG5Z53FxzZv3I1PExsdKishGve5InX3K3mksx
            lSwR4NKFKPrDv6h6NcWMHRiHxDxX7EYAh+tBYBDMIe4uzEXNLMu02CHz1g2e3D6V
            88pWkJoz6Bjx3vw=
            -----END CERTIFICATE-----
        PREFIX: /concourse/main/((foundation))
        INTERPOLATION_PATHS: ((foundation))
      input_mapping:
        files: config
      output_mapping:
        interpolated-files: interpolated-config
    - task: download-product
      image: platform-automation-image-azure
      file: platform-automation-tasks-azure/download-product.yml
      params:
        CONFIG_FILE: ((foundation))/download-ops-manager.yml
      input_mapping:
        config: interpolated-config
    - task: create-vm
      image: platform-automation-image-azure
      file: platform-automation-tasks-azure/create-vm.yml
      params:
        OPSMAN_CONFIG_FILE: ((foundation))/opsman.yml
        STATE_FILE: ((foundation))/state.yml
      input_mapping:
        config: interpolated-config
        state: config
        image: downloaded-product
      ensure:
        do:
          - task: make-commit
            image: platform-automation-image-azure
            file: platform-automation-tasks-azure/tasks/make-git-commit.yml
            input_mapping:
              repository: config
              file-source: generated-state
            output_mapping:
              repository-commit: config-commit
            params:
              FILE_SOURCE_PATH: state.yml
              FILE_DESTINATION_PATH: ((foundation))/state/state.yml
              GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@labbuildr.com"
              GIT_AUTHOR_NAME: "Platform Automation Bot"
              COMMIT_MESSAGE: 'Update state file'
          - put: config
            params:
              repository: config-commit
              merge: true                

credhub-interpolate-all-vars: &credhub-interpolate-all-vars
  image: platform-automation-image-azure
  file: platform-automation-tasks-azure/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: ((credhub-server))
    CREDHUB_CA_CERT: ((credhub-ca-cert.ca))
    PREFIX: ((credhub-interpolation-prefix))
    INTERPOLATION_PATHS: "nonprod/vars"
  input_mapping:
    files: variable
  output_mapping:
    interpolated-files: variable

credhub-interpolate-all-product-configs: &credhub-interpolate-all-product-configs
  image: platform-automation-image-azure
  file: platform-automation-tasks-azure/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: ((credhub-server))
    CREDHUB_CA_CERT: |
        -----BEGIN CERTIFICATE-----
        MIIDNzCCAh+gAwIBAgIUbHXdLLOhfmyWEqwHj633UaWtehgwDQYJKoZIhvcNAQEL
        BQAwGTEXMBUGA1UEAxMOY29udHJvbHBsYW5lY2EwHhcNMTkwNTE3MjI1NjQ4WhcN
        MjAwNTE2MjI1NjQ4WjAcMRowGAYDVQQDExFjb250cm9sLXBsYW5lLXRsczCCASIw
        DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKCOAGcGvNAhZpaWaNoMAt6Cv+vW
        TfJP8TP7E5FpTedv5mV21yG7BfrIOsrlPjaq3qnOP+soAd2b3GMe8RYBdKsHSiY3
        VQusVty7lWq+1xCYlvkK1ruAoUNxw2YSS6XGqKbZ3bqQd9552nWONUa6O9309lN9
        cYEHlj5/a5ulD1jRMh0SaNegJGJyT6XmDTitDSjoastK94N5rfv0ypu7pCqxDeZd
        vvV7LfwVeJkJF0ubUjKwqFZSI67v48oUjwxsJSK7vJFn4HadxiykFWbZIzHNiZJ5
        A8SdRVq6Tic22s2C4c+zk1smwqFzmA5bYxnNJ3fBVcMsjzZL3IfSz5stsnkCAwEA
        AaN0MHIwHQYDVR0OBBYEFIURsVznrEKXCv17KhQRjNzUySkoMCIGA1UdEQQbMBmC
        FyouY29udHJvbC5sYWJidWlsZHIuY29tMB8GA1UdIwQYMBaAFHW2XzlvLi+JV40E
        xMmqcfu1JOPvMAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggEBACxaaGZI
        tqZ7kAGAjsGqDP3LYBuGCKb5ezqt2NSRUdu9Kn5WNoKHPzyjmGO2H8wodIa/zgeM
        w3cJ+isdWtcMP3xRQNRpJZ8UEsO06pRhX3ob00OQxjrsucs4HdZbiqLh6I7ojQSt
        ACReBsP0R+jkiTi1aDJkOCqtV0bPO8wSAadXYhdm5rqclveY/4qR1S+Sbx3sQu82
        d/32RqNOFaN+d2sj0rZ/zt7zfEYHG5Z53FxzZv3I1PExsdKishGve5InX3K3mksx
        lSwR4NKFKPrDv6h6NcWMHRiHxDxX7EYAh+tBYBDMIe4uzEXNLMu02CHz1g2e3D6V
        88pWkJoz6Bjx3vw=
        -----END CERTIFICATE-----
    PREFIX: /concourse/main/((foundation))
    INTERPOLATION_PATHS: ((foundation))  
  input_mapping:
    files: variable
  output_mapping:
    interpolated-files: variable
groups:    
- name: fetch
  jobs:
  - fetch-platform-automation
  - fetch-pas  
- name: install-ops-man
  jobs:
  - install-ops-manager
- name: test
  jobs:  
  - test-resources