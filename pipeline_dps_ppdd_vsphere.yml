s3_env: &s3_env
  access_key_id: ((((foundation))/s3_access_key_id))
  endpoint:  ((((foundation))/s3_endpoint))
  region_name: ((((foundation))/s3_region_name))
  secret_access_key: ((((foundation))/s3_secret_access_key))


credhub_env: &credhub_env
  CREDHUB_CLIENT: ((((foundation))/credhub-client))
  CREDHUB_SECRET: ((((foundation))/credhub-secret))
  CREDHUB_SERVER: ((credhub-server))
  PREFIX: /concourse/main/((foundation))
  CREDHUB_CA_CERT: ((((foundation))/credhub-ca-cert.certificate))



resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
   

resources:
# triggers
#- name: daily-trigger
#  icon: calendar-clock
#  type: time
#  source:
#    interval: 24h


- name: one-time-trigger
  icon: calendar-clock
  type: time
  source:
    interval: 999999h



#- name: dps-automation-image
#  icon: cloud-download
#  type: s3
#  source:
#    <<: *s3_env
#    bucket: ((buckets.pivnet_image))
#    regexp: platform-automation-image-(.*).tgz
- name: dps-automation-image
  icon: docker
  type: docker-image
  source:
    repository: bottkars/dps-automation-image
#    tag: v0.1

- name: dps-modules
  tags: ((tags))
  icon: git
  type: git
  check_every: 10m  
  source:  
    uri: https://github.com/bottkars/dps-modules.git
    branch: master

## product resources
- name: ddve
  type: s3
  icon: folder-move
  source:
    <<: *s3_env
    bucket: ((buckets.dps_products))
    regexp: ddve/ddve-(([78])\.([234567]{1,2})\.([0-9]{1,2})\.([0-9]{1,2})-([0-9]{5,6})).ova #only release builds


jobs:
- name: deploy-ddve-ova
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
    - get: ddve
      tags: ((tags))
      params:
        unpack: false
    - get: dps-automation-image
      params:
        unpack: true
      tags: ((tags))        
    - get: dps-modules
      tags: ((tags))
  - task: deploy-ova
    tags: ((tags))
    image: dps-automation-image
    file: dps-modules/ci/tasks/deploy-ppdd.yml
    input_mapping:
      dps-modules: dps-modules
      ddve: ddve
    params:
      DEBUG: "FALSE"
      GOVC_INSECURE: ((GOVC.INSECURE))
      GOVC_PASSWORD: ((GOVC.PASSWORD))
      GOVC_URL: ((GOVC.URL))
      GOVC_USERNAME: ((GOVC.USERNAME))
      GOVC_RESOURCE_POOL: ((GOVC.RESOURCE_POOL))
      GOVC_DATASTORE: ((GOVC.DATASTORE)) 
      GOVC_DATACENTER: ((GOVC.DATACENTER)) 
      GOVC_NETWORK: ((GOVC.NETWORK))
      GOVC_VM_IPATH: ((GOVC.DATACENTER))/vm/((PPDD.FOLDER))/((PPDD.VMNAME))
      PPDD_NETWORK: ((PPDD.NETWORK))
      PPDD_ADDRESS: ((PPDD.ADDRESS))
      PPDD_GATEWAY: ((PPDD.GATEWAY))
      PPDD_NETMASK: ((PPDD.NETMASK))
      PPDD_FQDN: ((PPDD.FQDN))
      PPDD_VMNAME: ((PPDD.VMNAME))
      PPDD_DNS: ((PPDD.DNS))
      PPDD_TYPE: ((PPDD.TYPE)) 
      PPDD_FOLDER: ((PPDD.FOLDER))   
- name: configure-ppdd
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
    - get: dps-automation-image
      passed: [ deploy-ddve-ova ]
      params:
        unpack: true
      tags: ((tags))        
    - get: dps-modules
      tags: ((tags))
  - task: configure-ppdd
    tags: ((tags))
    image: dps-automation-image
    file: dps-modules/ci/tasks/configure-ppdd.yml
    input_mapping:
      dps-modules: dps-modules
    params:
      DEBUG: "FALSE"
      GOVC_INSECURE: ((GOVC.INSECURE))
      GOVC_PASSWORD: ((GOVC.PASSWORD))
      GOVC_URL: ((GOVC.URL))
      GOVC_USERNAME: ((GOVC.USERNAME))
      GOVC_RESOURCE_POOL: ((GOVC.RESOURCE_POOL))
      GOVC_DATASTORE: ((GOVC.DATASTORE)) 
      GOVC_DATACENTER: ((GOVC.DATACENTER))       
      PPDD_NETWORK: ((PPDD.NETWORK))
      PPDD_ADDRESS: ((PPDD.ADDRESS))
      PPDD_GATEWAY: ((PPDD.GATEWAY))
      PPDD_NETMASK: ((PPDD.NETMASK))
      PPDD_FQDN: ((PPDD.FQDN))
      PPDD_VMNAME: ((PPDD.VMNAME))
      PPDD_DNS: ((PPDD.DNS))
      PPDD_SETUP_PASSWORD: ((PPDD.SETUP_PASSWORD))
      PPDD_PASSWORD: ((PPDD.SETUP_PASSWORD))
      PPDD_USERNAME: ((PPDD.USERNAME))
      PPDD_FOLDER: ((PPDD.FOLDER))
      PPDD_INTERFACE: ((PPDD.INTERFACE))
      PPDD_NFS_PATH: ((PPDD.PATH.PATH_1)) 
      PPDD_NFS_CLIENT: ((PPDM.FQDN))
      GOVC_VM_IPATH: ((GOVC.DATACENTER))/vm/((PPDD.FOLDER))/((PPDD.VMNAME))
- name: change-ppdd-password
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
    - get: dps-automation-image
      passed: [ configure-ppdd ]
      params:
        unpack: true
      tags: ((tags))        
    - get: dps-modules
      tags: ((tags))
  - task: change-ppdd-password
    tags: ((tags))
    image: dps-automation-image
    file: dps-modules/ci/tasks/change-ppdd-password.yml
    input_mapping:
      dps-modules: dps-modules
    params:
      DEBUG: "FALSE"
      PPDD_FQDN: ((PPDD.FQDN))
      PPDD_SETUP_PASSWORD: ((PPDD.SETUP_PASSWORD))
      PPDD_PASSWORD: ((PPDD.PASSWORD))
      PPDD_USERNAME: ((PPDD.USERNAME))
- name: delete-ppdd
  plan:
  - in_parallel:
    - get: dps-automation-image
      params:
        unpack: true
      tags: ((tags))
      passed: [ deploy-ddve-ova ]              
    - get: dps-modules
      tags: ((tags))
  - task: delete-ddve
    tags: ((tags))
    image: dps-automation-image
    file: dps-modules/ci/tasks/delete-ppdd.yml
    input_mapping:
      dps-modules: dps-modules
    params:
      DEBUG: "FALSE"
      GOVC_INSECURE: ((GOVC.INSECURE))
      GOVC_PASSWORD: ((GOVC.PASSWORD))
      GOVC_URL: ((GOVC.URL))
      GOVC_USERNAME: ((GOVC.USERNAME))
      GOVC_RESOURCE_POOL: ((GOVC.RESOURCE_POOL))
      GOVC_DATASTORE: ((GOVC.DATASTORE)) 
      GOVC_DATACENTER: ((GOVC.DATACENTER)) 
      GOVC_NETWORK: ((GOVC.NETWORK))
      PPDD_VMNAME: ((PPDD.VMNAME))
