---
s3_env: &s3_env
  access_key_id: ((s3_access_key_id))
  endpoint:  ((s3_endpoint))
  region_name: ((s3_region_name))
  secret_access_key: ((s3_secret_access_key))
azure_env: &azure_env
  PROFILE: ((arm_profile))
  CA_CERT: ((azs_ca.certificate))
  AZURE_CLI_CA_PATH: /opt/az/lib/python3.6/site-packages/certifi/cacert.pem
  ENDPOINT_RESOURCE_MANAGER: ((endpoint-resource-manager)) 
  VAULT_DNS:  ((vault-dns))
  SUFFIX_STORAGE_ENDPOINT: ((suffix-storage-endpoint))
  AZURE_TENANT_ID: ((tenant_id))
  AZURE_CLIENT_ID: ((client_id))
  AZURE_CLIENT_SECRET: ((client_secret))
  AZURE_SUBSCRIPTION_ID: ((subscription_id))
  RESOURCE_GROUP: ((aks.resource_group))
  LOCATION: ((azurestack_region))
aks_env: &aks_env
  AKS_ORCHESTRATOR_RELEASE: ((aks.orchestrator_release))
  AKS_MASTER_DNS_PREFIX: ((aks.master.dns_prefix))
  AKS_MASTER_VMSIZE: ((aks.master.vmsize))
  AKS_MASTER_NODE_COUNT: ((aks.master.node_count))
  AKS_MASTER_DISTRO: ((aks.master.distro))
  AKS_AGENT_0_VMSIZE: ((aks.agent.0.vmsize))
  AKS_AGENT_0_NODE_COUNT: ((aks.agent.0.node_count))
  AKS_AGENT_0_DISTRO: ((aks.agent.0.distro))
  AKS_AGENT_0_OSTYPE: ((aks.agent.0.ostype))
  AKS_AGENT_0_POOL_NAME: ((aks.agent.0.pool_name))
  AKS_RESOURCE_GROUP: ((aks.resource_group))
  AKS_ADDITIONAL_APIMODEL: "" # ((aks.additional_apimodel))
  SSH_PUBLIC_KEY: ((aks.ssh_public_key))

credhub_env: &credhub_env
  CREDHUB_CLIENT: ((credhub-client))
  CREDHUB_SECRET: ((credhub-secret))
  CREDHUB_SERVER: ((credhub-server))
  PREFIX: /concourse/main/((aks.team))
  CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))



slack_start_param: &slack_start_param
  channel: ((slack.channel))
  text: |
    ((aks.team)) Job $BUILD_JOB_NAME started with ID $BUILD_ID for 
    build $BUILD_NAME for team $BUILD_TEAM_NAME at
    $ATC_EXTERNAL_URL using pipeline  $BUILD_PIPELINE_NAME
    see $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    for details
  icon_emoji: ":concourse-started:"

slack_succeeded_param: &slack_succeeded_param
  channel: ((slack.channel))
  text: |
    ((aks.team)) Job $BUILD_JOB_NAME succeeded with ID $BUILD_ID for 
    build $BUILD_NAME for team $BUILD_TEAM_NAME at
    $ATC_EXTERNAL_URL using pipeline  $BUILD_PIPELINE_NAME    
    see $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    for details
  icon_emoji: ":concourse-succeeded:"

slack_failed_param: &slack_failed_param
  channel: ((slack.channel))
  text: |
    ((aks.team)) Job $BUILD_JOB_NAME failed with ID $BUILD_ID for 
    build $BUILD_NAME for team $BUILD_TEAM_NAME at
    $ATC_EXTERNAL_URL using pipeline  $BUILD_PIPELINE_NAME
    see $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    for details
  icon_emoji: ":concourse-failed:"

resource_types:
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

- name: pivnet
  tags: ((tags))
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
- name: slack-notification
  tags: ((tags))
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource    
resources:

- name: cf-for-k8s-master
  tags: ((tags))
  type: git
  icon: github-box
  check_every: 10m  
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-for-k8s
#    git@github.com:cloudfoundry/cf-for-k8s

- name: kubeconfig
  tags: ((tags))
  icon: amazon-drive
  type: s3
  source:
    <<: *s3_env
    bucket: ((aks.bucket))
    regexp: ((aks.resource_group))/kubeconfig-(.*).json

- name: bosh-cli-release
  tags: ((tags))
  icon: github-circle
  type: github-release
  check_every: 10m  
  source: 
    owner: cloudfoundry
    repository: bosh-cli
#    tag_filter: ((aks.engine_tagfilter))
#- name: after-midnight
#  tags: ((tags))
#  icon: calendar-clock
#  type: time
#  source:
#    start: 01:00 AM
#    stop: ((after_midnight_end))
#    interval: 24h
#    location: Europe/Berlin 
# notifications
#- name: notify
#  tags: ((tags))
#  icon: bell
#  type: slack-notification
#  source:
#    url: ((slack.webhook))
#


- name: cf-values
  tags: ((tags))
  icon: amazon-drive
  type: s3
  source:
    <<: *s3_env
    bucket: ((aks.bucket))
    regexp: ((aks.resource_group))/cf-values-(.*).json  


- name: platform-automation-image
  tags: ((tags))
  icon: amazon-drive
  type: s3
  source:
    <<: *s3_env
    bucket: ((buckets_pivnet_image))
    regexp: platform-automation-image-(.*).tgz


- name: azs-concourse
  tags: ((tags))
  icon: git
  type: git
  check_every: 10m  
  source:  
    uri: https://github.com/bottkars/azs-concourse
    branch: ((azs.azs-concourse-branch))


jobs:
- name: deploy-cf-for-k8s
  plan:
  - in_parallel:
    - get: kubeconfig
      tags: ((tags))
    - get: cf-for-k8s-master
      tags: ((tags))
    - get: azs-concourse
      tags: ((tags))
    - get: platform-automation-image
      tags: ((tags))
      params:
        unpack: true
    - get: bosh-cli-release
      tags: ((tags))
      params:
        globs:
        - bosh-cli-*-linux-amd64   
  - task: deploy-cf-for-k8s-master
    tags: ((tags))
    file: azs-concourse/ci/tasks/deploy-cf-for-k8s.yml  
    image: platform-automation-image
    params:
      <<: *azure_env
      DNS_DOMAIN: ((cf_k8s_domain))
  - put: cf-values
    tags: ((tags))
    params:
      file: cf-values/cf-values-*.json 
